{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#introducing-willi-api","title":"Introducing willi-api.","text":"<p>willi-api is an excellent tool that showcases a diverse selection of random images featuring willi (in short for William), an adorable Latvian cat who is owned by Richard.</p> <p></p> <p>Such a cute cat right?</p> <p>But don't be fooled by its simplicity! Willi-API is the perfect tool for a variety of humorous purposes. Want to brighten up your day with some cute and funny pictures of cats? Willi-API has got you covered !</p> <p>In addition, Willi-API can also be used to inspire creativity and humor.</p> <p>Use the images as a starting point for creating anything your creativity takes you.</p> <p>And who knows, maybe willi da cat will become the next big meme sensation.</p>"},{"location":"howitworks/","title":"How does it work?","text":"<p>The code is written in PHP.</p> <p>It selects a random image and checks if there are any arguments provided in the URL.</p> <p>If so, it resizes the image based on the scale argument and applies image styles based on the style argument, and outputs the resized image.</p> <p>If not, it outputs the original image without any modifications.</p> <p>The code uses the GD library to manipulate the images and the glob function to get a list of image files in the directory.</p> <p>GD Library is a PHP extension that allows us to create and manipulate images dynamically using PHP code.</p> <p>It provides various functions to create, manipulate and output images in different formats like JPEG, GIF, PNG, WBMP, etc.</p> <p>It also supports advanced image processing techniques such as antialiasing, alpha blending, and color manipulation.</p> <p>The code then sets the appropriate Content-Type header based on the image type.</p> <p></p>"},{"location":"usage/","title":"Usage","text":"<p>Its very easy to include willi-api in your projects.</p>"},{"location":"usage/#html","title":"HTML","text":"<p>Just include the following tag</p> <pre><code>&lt;img src='https://willi-api.xwqx.cf/api'/&gt;\n</code></pre>"},{"location":"usage/#arguments","title":"Arguments","text":"<p>willi-api allows certain customization of the images.</p> <p>As of right now it supports <code>2</code> arguments:</p> <ul> <li>scale</li> <li>style</li> </ul>"},{"location":"usage/#scale","title":"scale","text":"<p>scale allows you to scale the images up or down</p> <p>To use it you have to add the `scale=percentage' argument</p> <pre><code>&lt;img src='https://willi-api.xwqx.cf/api?scale=40%'/&gt;\n</code></pre> <p>In this case, It should output an image 40% of its original dimensions while preserving the aspect ratio.</p> <p></p>"},{"location":"usage/#style","title":"style","text":"<p>Adds a bunch of styles</p> <p>As of right now the style argument has 2 sub options:</p> <p>It renders the image in monochrome</p> <p>To use it you have to add the `style=monochrome' argument</p> <pre><code>&lt;img src='https://willi-api.xwqx.cf/api?style=monochrome'/&gt;\n</code></pre> <p>It should render an image like this</p> <p></p> <p>It renders the color of the image as inverted</p> <p>To use it you have to add the <code>style=invertedcolor</code></p> <pre><code>&lt;img src='https://willi-api.xwqx.cf/api?style=invertedcolor'/&gt;\n</code></pre> <p>It should render an image like this</p> <p></p>"},{"location":"usage/#monochrome","title":"monochrome","text":""},{"location":"usage/#invertedcolor","title":"invertedcolor","text":""}]}